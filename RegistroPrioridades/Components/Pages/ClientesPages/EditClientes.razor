@page "/Clientes/Edit/{ClienteId:int}"
@inject ClientesServices clientesServices
@inject NavigationManager Navigation

<h3>Editar Cliente</h3>

@if (cliente == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="cliente" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nombres" class="form-label">Nombres:</label>
            <InputText id="nombres" class="form-control" @bind-Value="cliente.Nombres" />
            <ValidationMessage For="@(() => cliente.Nombres)" />
        </div>

        <div class="mb-3">
            <label for="whatsapp" class="form-label">WhatsApp:</label>
            <InputText id="whatsapp" class="form-control" @bind-Value="cliente.WhatsApp" />
            <ValidationMessage For="@(() => cliente.WhatsApp)" />
        </div>

        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
        <button class="btn btn-secondary" @onclick="Regresar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter] public int ClienteId { get; set; }
    private Clientes? cliente;

    protected override async Task OnInitializedAsync()
    {
        cliente = await clientesServices.Buscar(ClienteId);
    }

    private async Task Guardar()
    {
        if (await clientesServices.Guardar(cliente))
        {
            Navigation.NavigateTo("/Clientes/Index");
        }
        else
        {
            Console.WriteLine("Error al guardar los cambios.");
        }
    }

    private void Regresar()
    {
        Navigation.NavigateTo("/Clientes/Index");
    }
}

@page "/Clientes/Index"
@inject ClientesService clientesServices
@inject NavigationManager navigationManager

<PageTitle>Clientes</PageTitle>

<div class="border shadow-lg p-3 rounded">
    <div class="card-header bg-primary text-white text-center py-2">
        <h3 class="mb-0 font-weight-bold">Clientes</h3>
    </div>

    <div class="row mb-3 align-items-end">
        <div class="col-md-3">
            <label for="Filtro" class="form-label">Filtrar por:</label>
            <select @bind="filtro" class="form-select">
                <option value="" disabled selected>Seleccione una opción</option>
                <option value="id">ID</option>
                <option value="nombres">Nombres</option>
                <option value="whatsapp">WhatsApp</option>
            </select>
        </div>
        <div class="col-md-6">
            <label for="ValorFiltro" class="form-label">Buscar:</label>
            <div class="input-group">
                <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                <button @onclick="Buscar" class="btn btn-outline-secondary" type="button">
                    <span class="bi bi-search"></span>
                </button>
            </div>
        </div>
        <div class="col-md-3 text-end">
            <a href="/Clientes/Create" class="btn btn-success" type="button">
                <i class="bi bi-plus-circle-fill"></i> Crear Nuevo Cliente
            </a>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered text-center">
            <thead class="bg-primary text-white">
                <tr>
                    <th>ClienteId</th>
                    <th>Nombres</th>
                    <th>WhatsApp</th>
                    <th>Ver</th>
                    <th>Editar</th>
                    <th>Eliminar</th>
                </tr>
            </thead>
            <tbody>
                @if (clientes != null && clientes.Count > 0)
                {
                    @foreach (var cliente in clientes)
                    {
                        <tr>
                            <td>@cliente.ClienteId</td>
                            <td>@cliente.Nombres</td>
                            <td>@cliente.WhatsApp</td>
                            <td>
                                <a class="btn btn-outline-primary" href="/Clientes/Details/@cliente.ClienteId">
                                    <span class="bi bi-eye-fill"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn btn-outline-success" href="/Clientes/Edit/@cliente.ClienteId">
                                    <span class="bi bi-pencil-square"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn btn-outline-danger" href="/Clientes/Delete/@cliente.ClienteId">
                                    <span class="bi bi-trash"></span>
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">No se encontraron clientes.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="card-footer text-start">
        <p style="font-weight: bold;">Total de Clientes: @clientes?.Count</p>
    </div>
</div>

@code {
    private List<Clientes> clientes = new List<Clientes>();
    private string filtro = "id";
    private string? valorFiltro;

    protected override async Task OnInitializedAsync()
    {
        clientes = await clientesServices.Listar(c => true);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int ClienteId))
            {
                clientes = await clientesServices.Listar(c => c.ClienteId == ClienteId);
            }
            else if (filtro == "nombres")
            {
                clientes = await clientesServices.Listar(c => c.Nombres.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase));
            }
            else if (filtro == "whatsapp")
            {
                clientes = await clientesServices.Listar(c => c.WhatsApp.Contains(valorFiltro));
            }
        }
        else
        {
            clientes = await clientesServices.Listar(c => true);
        }
    }
}
